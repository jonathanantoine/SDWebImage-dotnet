name: Build SDWebImage MAUI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: macos-latest

    env:
      SDK: 17.5
      NATIVE_RELEASE: 5.21.0
      SRC_FOLDER: SDWebImage-5.21.0
      PROJ_NAME: SDWebImage.xcodeproj

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4


    - name: Download and extract SDWebImage
      run: |
        curl -L https://github.com/SDWebImage/SDWebImage/archive/refs/tags/${{ env.NATIVE_RELEASE }}.zip -o sdwebimage.zip
        unzip sdwebimage.zip
        rm sdwebimage.zip
        
    - name: Ajouter SDCallbackQueue.m dans project.pbxproj
      working-directory: ${{ env.SRC_FOLDER }}
      run: |
        PBXPROJ_FILE="${{ env.PROJ_NAME }}/project.pbxproj"
        TARGET_LINE="3290FA0A1FA478AF0047D20C /* SDImageFrame.m in Sources */,"
        NEW_LINE="				321117AA296573680001FC2C /* SDCallbackQueue.m in Sources */,"
    
        if [ ! -f "$PBXPROJ_FILE" ]; then
        echo "Erreur : Le fichier $PBXPROJ_FILE n'existe pas."
        exit 1
        fi
    
        # Créer une sauvegarde du fichier original
        cp "$PBXPROJ_FILE" "$PBXPROJ_FILE.bak"
    
        # Ajouter la nouvelle ligne après la ligne cible
        sed -i'' -e "/$TARGET_LINE/a\\
        $NEW_LINE" "$PBXPROJ_FILE"
    
        # Vérifier si la ligne a été ajoutée
        if grep -q "$NEW_LINE" "$PBXPROJ_FILE"; then
        echo "Ligne ajoutée avec succès dans $PBXPROJ_FILE."
        else
        echo "Erreur : Impossible d'ajouter la ligne dans $PBXPROJ_FILE."
        # Restaurer la sauvegarde en cas d'échec
        mv "$PBXPROJ_FILE.bak" "$PBXPROJ_FILE"
        exit 1
        fi
    
        # Supprimer la sauvegarde si tout s'est bien passé
        rm "$PBXPROJ_FILE.bak"
        
    - name: Upload .cxcproj files as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: native-libs
        compression-level: '0'
        path:
          ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }}/**
    
    
    - name: Build SDWebImage for simulator
      run: |
        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
          -target "SDWebImage static" \
          -sdk iphonesimulator${{ env.SDK }} \
          IPHONEOS_DEPLOYMENT_TARGET=12.2 \
          EXCLUDED_ARCHS="arm64"

    - name: Build SDWebImage for device
      run: |
        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
          -configuration Release \
          -target "SDWebImage static" \
          -sdk iphoneos${{ env.SDK }} \
          IPHONEOS_DEPLOYMENT_TARGET=12.2
        
#    - name: Build SDWebImage for xcproj
#      run: |
#        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
#          -configuration Release \
#          -target "SDWebImage XCFramework" \
#          -sdk iphoneos${{ env.SDK }} \
#          IPHONEOS_DEPLOYMENT_TARGET=12.2
#        
#        
#    - name: Upload .a files as artifact
#      uses: actions/upload-artifact@v4.6.2
#      with:
#        name: native-libs
#        compression-level: '0'
#        path:
#          ${{ env.SRC_FOLDER }}/build/**
      
      
    - name: Create universal lib with lipo
      run: |
        lipo -create \
          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/libSDWebImage.a \
          ${{ env.SRC_FOLDER }}/build/Release-iphonesimulator/libSDWebImage.a \
          -output ./libSDWebImage.a
        lipo -info ./libSDWebImage.a

    - name: Install .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x' 

    - name: restore workload
      run: dotnet workload restore

    - name: Build .NET binding project
      run: dotnet build -c Release SDWebImage-dotnet.csproj

    - name: Pack NuGet
      run: dotnet pack -c Release SDWebImage-dotnet.csproj

    - name: Upload .nupkg as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: nuget-package
        compression-level: '0'
        path:
          /Users/runner/work/SDWebImage-dotnet/SDWebImage-dotnet/bin/Release/*.nupkg  

    - name: Upload .a files as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: native-libs
        compression-level: '0'
        path:
          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/** 
