name: Build SDWebImage MAUI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: macos-latest

    env:
      SDK: 17.5
      NATIVE_RELEASE: 5.21.0
      SRC_FOLDER: SDWebImage-5.21.0
      PROJ_NAME: SDWebImage.xcodeproj

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download and extract SDWebImage
      run: |
        curl -L https://github.com/SDWebImage/SDWebImage/archive/refs/tags/${{ env.NATIVE_RELEASE }}.zip -o sdwebimage.zip
        unzip sdwebimage.zip
        rm sdwebimage.zip

    - name: Inject a line pour SDCallbackQueue
      run: |
        set -e # Arrête le script si une commande échoue

        # IMPORTANT: Remplacez 'chemin/vers/votre/fichier.ext' ci-dessous
        # par le chemin réel de votre fichier (ex: MonApp/MonApp.xcodeproj/project.pbxproj)
        FILE_PATH="${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }}/project.pbxproj" # <-- MODIFIEZ CECI
        LINE_NUMBER=1271
        LINE_TO_INSERT='				321117AA296573680001FC2C /* SDCallbackQueue.m in Sources */,'

        echo "Vérification de l'existence du fichier : $FILE_PATH"
        if [ ! -f "$FILE_PATH" ]; then
          echo "ERREUR: Le fichier $FILE_PATH n'a pas été trouvé."
          exit 1
        fi

        echo "Tentative d'insertion de la ligne à la ligne $LINE_NUMBER dans $FILE_PATH"

        # Utilisation de sed pour insérer la ligne.
        # L'option -i '' est nécessaire sur macOS (BSD sed) pour éditer le fichier en place sans créer de backup.
        # La commande 'i\' insère le texte qui suit *avant* la ligne spécifiée.
        # Attention aux caractères spéciaux dans LINE_TO_INSERT si vous la changez. Ici, ça devrait aller.
        sed -i '' "${LINE_NUMBER}i\\
        ${LINE_TO_INSERT}
        " "$FILE_PATH"

        echo "Insertion terminée."

        # Optionnel : Vérification (affiche la ligne insérée et quelques lignes autour)
        echo "Vérification du contenu autour de la ligne $LINE_NUMBER :"
        # sed -n 'start,end p' affiche les lignes dans cet intervalle
        start_line=$((LINE_NUMBER - 2))
        end_line=$((LINE_NUMBER + 2))
        sed -n "${start_line},${end_line}p" "$FILE_PATH" || echo "Avertissement: Moins de lignes que prévu pour la vérification."
        
    - name: Build SDWebImage for simulator
      run: |
         xcodebuild archive -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
         -scheme "SDWebImage static" \
         -target "SDWebImage static" \
         -sdk iphonesimulator${{ env.SDK }} \
         -archivePath "${{ env.SRC_FOLDER }}/archive/iphonesimulator.xcarchive" \
         IPHONEOS_DEPLOYMENT_TARGET=12.2 \                
         SKIP_INSTALL=NO \
         BUILD_LIBRARY_FOR_DISTRIBUTION=YES
                
    - name: Build SDWebImage for simulator
      run: |
        xcodebuild archive -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
          -scheme  "SDWebImage static" \
          -sdk iphoneos {{ env.SDK }} \
          -archivePath "${{ env.SRC_FOLDER }}/archive/iphoneos.xcarchive" \
          IPHONEOS_DEPLOYMENT_TARGET=12.2 \                
          SKIP_INSTALL=NO \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES
        
#    - name: Build SDWebImage for simulator
#      run: |
#        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
#          -target "SDWebImage static" \
#          -sdk iphonesimulator${{ env.SDK }} \
#          IPHONEOS_DEPLOYMENT_TARGET=12.2 \
#
#    - name: Build SDWebImage for device
#      run: |
#        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
#          -configuration Release \
#          -target "SDWebImage static" \
#          -sdk iphoneos${{ env.SDK }} \
#          IPHONEOS_DEPLOYMENT_TARGET=12.2        
        
    - name: Create XCFramework
      run: |
          xcodebuild -create-xcframework \
            -archive "${{ env.SRC_FOLDER }}/archive/iphoneos.xcarchive" -library Products/usr/local/lib/libSDWebImage.a \
            -archive "${{ env.SRC_FOLDER }}/archive/iphoneos.xcarchive" -library Products/usr/local/lib/libSDWebImage.a \
            -output "SDWebImage.xcframework"
          echo "XCFramework créé à SDWebImage.xcframework"
          ls -lha SDWebImage.xcframework # Afficher le contenu du xcframework créé        
          
#    - name: Create universal lib with lipo
#      run: |
#        lipo -create \
#          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/libSDWebImage.a \
#          ${{ env.SRC_FOLDER }}/build/Release-iphonesimulator/libSDWebImage.a \
#          -output ./libSDWebImage.a
#        lipo -info ./libSDWebImage.a

    - name: Install .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x' 

    - name: restore workload
      run: dotnet workload restore

    - name: Build .NET binding project
      run: dotnet build -c Release SDWebImage-dotnet.csproj

    - name: Pack NuGet
      run: dotnet pack -c Release SDWebImage-dotnet.csproj

    - name: Upload .nupkg as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: nuget-package
        compression-level: '0'
        path:
          /Users/runner/work/SDWebImage-dotnet/SDWebImage-dotnet/bin/Release/*.nupkg  

    - name: Upload .a files as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: native-libs-iphoneos
        compression-level: '0'
        path:
          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/** 
