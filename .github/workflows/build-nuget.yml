name: Build SDWebImage MAUI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: macos-latest

    env:
      SDK: 17.5
      NATIVE_RELEASE: 5.21.0
      SRC_FOLDER: SDWebImage-5.21.0
      PROJ_NAME: SDWebImage.xcodeproj

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4


    - name: Download and extract SDWebImage
      run: |
        curl -L https://github.com/SDWebImage/SDWebImage/archive/refs/tags/${{ env.NATIVE_RELEASE }}.zip -o sdwebimage.zip
        unzip sdwebimage.zip
        rm sdwebimage.zip
        
    - name: Modifier le project.pbxproj pour inclure SDCallbackQueue.m dans la cible statique
      run: |
        PBXPROJ_FILE="${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }}/project.pbxproj"
        SOURCES_PHASE_ID="53761308155AD0D5005750A4"
        BUILD_FILE_ID="321117AA296573680001FC2C"
        COMMENT="/* SDCallbackQueue.m in Sources */"
        LINE_TO_ADD="\t\t\t\t${BUILD_FILE_ID} ${COMMENT},"
        
        if [ ! -f "$PBXPROJ_FILE" ]; then
        echo "Erreur: Fichier $PBXPROJ_FILE non trouvé!"
        exit 1
        fi
        
        echo "Recherche de la phase avec ID: $SOURCES_PHASE_ID dans $PBXPROJ_FILE"
        grep -n "$SOURCES_PHASE_ID" "$PBXPROJ_FILE" || echo "ID de phase non trouvé!"
        
        # Extraire et afficher la section autour de l'ID
        echo "Extrait de la section cible (10 lignes avant et après l'ID):"
        grep -A 10 -B 10 "$SOURCES_PHASE_ID" "$PBXPROJ_FILE" || echo "Impossible d'extraire la section!"
        
        # Script modifié pour ajouter des logs
        awk -v phase_id="$SOURCES_PHASE_ID" -v line_to_add="$LINE_TO_ADD" '
        BEGIN { in_phase=0; in_files=0 }
        $0 ~ phase_id { 
        in_phase=1; 
        print "DEBUG: Trouvé ID de phase à la ligne " NR ", contenu: " $0 > "/dev/stderr";
        }
        in_phase && /files = \(/ { 
        in_files=1; 
        print "DEBUG: Trouvé début liste des fichiers à la ligne " NR ", contenu: " $0 > "/dev/stderr";
        }
        in_phase && in_files && /^\s*\);/ {
        print "DEBUG: Trouvé fin liste des fichiers à la ligne " NR ", contenu: " $0 > "/dev/stderr";
        print "DEBUG: Ajout de la ligne: " line_to_add > "/dev/stderr";
        print line_to_add;
        in_files=0;
        
        # Enregistrer ligne suivante pour le log
        getline next_line;
        print "DEBUG: Ligne suivante: " next_line > "/dev/stderr";
        print next_line;
        next;
        }
        { print }
        in_phase && /};/ { 
        in_phase=0; 
        print "DEBUG: Fin de la phase à la ligne " NR ", contenu: " $0 > "/dev/stderr";
        }
        ' "$PBXPROJ_FILE" > temp_pbxproj && mv temp_pbxproj "$PBXPROJ_FILE" && echo "DEBUG: Fichier modifié généré: $PBXPROJ_FILE (via temp_pbxproj)"
        
        echo "Vérification de l'ajout de la ligne..."
        if grep -q "$BUILD_FILE_ID" "$PBXPROJ_FILE"; then
        echo "Modification réussie. Ligne ajoutée."
        
        # Montrer le contexte autour de la ligne ajoutée
        echo "Contexte autour de la ligne ajoutée (5 lignes avant et après):"
        grep -n -A 5 -B 5 "$BUILD_FILE_ID" "$PBXPROJ_FILE"
        else
        echo "Erreur: La modification n'a pas été appliquée."
        exit 1
        fi
        
        # Vérification supplémentaire pour comprendre la structure
        echo "Structure des sections de files dans le fichier:"
        grep -n "files = (" "$PBXPROJ_FILE" | head -10
        
    - name: Upload .cxcproj files as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: native-libs
        compression-level: '0'
        path:
          ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }}/**
    
    
    - name: Build SDWebImage for simulator
      run: |
        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
          -target "SDWebImage static" \
          -sdk iphonesimulator${{ env.SDK }} \
          IPHONEOS_DEPLOYMENT_TARGET=12.2 \
          EXCLUDED_ARCHS="arm64"

    - name: Build SDWebImage for device
      run: |
        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
          -configuration Release \
          -target "SDWebImage static" \
          -sdk iphoneos${{ env.SDK }} \
          IPHONEOS_DEPLOYMENT_TARGET=12.2
        
#    - name: Build SDWebImage for xcproj
#      run: |
#        xcodebuild -project ${{ env.SRC_FOLDER }}/${{ env.PROJ_NAME }} \
#          -configuration Release \
#          -target "SDWebImage XCFramework" \
#          -sdk iphoneos${{ env.SDK }} \
#          IPHONEOS_DEPLOYMENT_TARGET=12.2
#        
#        
#    - name: Upload .a files as artifact
#      uses: actions/upload-artifact@v4.6.2
#      with:
#        name: native-libs
#        compression-level: '0'
#        path:
#          ${{ env.SRC_FOLDER }}/build/**
      
      
    - name: Create universal lib with lipo
      run: |
        lipo -create \
          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/libSDWebImage.a \
          ${{ env.SRC_FOLDER }}/build/Release-iphonesimulator/libSDWebImage.a \
          -output ./libSDWebImage.a
        lipo -info ./libSDWebImage.a

    - name: Install .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x' 

    - name: restore workload
      run: dotnet workload restore

    - name: Build .NET binding project
      run: dotnet build -c Release SDWebImage-dotnet.csproj

    - name: Pack NuGet
      run: dotnet pack -c Release SDWebImage-dotnet.csproj

    - name: Upload .nupkg as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: nuget-package
        compression-level: '0'
        path:
          /Users/runner/work/SDWebImage-dotnet/SDWebImage-dotnet/bin/Release/*.nupkg  

    - name: Upload .a files as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: native-libs
        compression-level: '0'
        path:
          ${{ env.SRC_FOLDER }}/build/Release-iphoneos/** 
